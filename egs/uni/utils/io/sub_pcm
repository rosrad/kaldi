#!/usr/bin/env python

import sys
import wave
import getopt
import struct

def convert(tstart, tend, input, output, 
            nchannels, framerate, sampwidth):

    sys.stdout.write('Channels: %d\n' % nchannels)
    sys.stdout.write('Frame rate: %d\n' % framerate)
    sys.stdout.write('Sample width: %d\n' % sampwidth)
    sys.stdout.write('Sub in second : [%.2fs - %.2fs]\n' % (tstart,tend) )
    framesize = nchannels * sampwidth
    # import pdb; pdb.set_trace()
           
    nstart = int(tstart*framesize*framerate)
    nend = int(tend*framesize*framerate)
    
    nneed = nend - nstart
    sys.stdout.write('Sub in sample : [%d - %d]\n' % (nstart,nend) )
    with open(input, 'rb') as inf:
        with open(output, 'wb') as wf:
            inf.seek(nstart)
            data = inf.read(nneed)
            nlen = len(data)
            wf.write(data)
            sys.stdout.write('Copy [%d], Need [%d]\n' % (nlen, nneed))
            
def usage():
    print 'sub_pcm start end INPUT  OUTPUT'

def main():
    nchannels = 1
    framerate = 16000
    sampwidth = 2

    try:
        opts, args = getopt.getopt(sys.argv[1:], 'hc:r:w:V',
            ['help', 'nchannels=', 'framerate', 'sampwidth', 'version'])
    except getopt.GetoptError, err:
        usage()
        sys.exit(1)
    if len(args) < 4:
        usage()
        sys.exit(1)

    for o, a in opts:
        if o in ('-h', '--help'):
            show_usage()
            exit()
        elif o in ('-c', '--nchannels'):
            nchannels = int(a)
        elif o in ('-r', '--framerate'):
            framerate = int(a)
        elif o in ('-w', '--sampwidth'):
            sampwidth = int(a)
        elif o in ('-V', '--version'):
            usage()
            exit()

    convert(float(args[0]), float(args[1]),
            args[2], args[3], nchannels, framerate, sampwidth)

if __name__ == '__main__':
    main()
